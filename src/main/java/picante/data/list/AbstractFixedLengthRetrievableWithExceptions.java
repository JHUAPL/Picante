package picante.data.list;

/**
 * A layer of abstraction to manage the {@link IndexOutOfBoundsException} generated by the record
 * retrieval routines in the record list interface.
 * <p>
 * This class will manage the generation of index out of bounds exceptions, blocking access to
 * invoking the {@link AbstractFixedLengthGaugedRetrievableWithExceptions#obtainRecord(int, Object)}
 * method if the supplied index lies outside the specified range. It is simply a convenience class,
 * if you do not wish to manage the error handling in your own code.
 * </p>
 * 
 * @param <R> the type of data record required by the implementation
 */
public abstract class AbstractFixedLengthRetrievableWithExceptions<R> implements Retrievable<R> {

  protected final int length;

  public AbstractFixedLengthRetrievableWithExceptions(int length) {
    this.length = length;

    if (length <= 0) {
      throw new IllegalArgumentException(
          "Length: " + length + " is invalid.  Length must be strictly positive.");
    }
  }

  @Override
  public int size() {
    return length;
  }

  @Override
  public R get(int index, R buffer) {

    if ((index < 0) || (index > (length - 1))) {
      throw new IndexOutOfBoundsException("The requested record index: " + index
          + " is invalid.  Indices must lie in [0," + (length - 1));
    }

    return obtainRecord(index, buffer);
  }

  /**
   * Method to actually retrieve the record associated with a particular index. This is used
   * directly in the implementation of
   * {@link AbstractFixedLengthGaugedRetrievableWithExceptions#get(int, Object)} to retrieve the
   * record.
   * 
   * @param index index of interest
   * @param buffer buffer to receive the record
   * 
   * @return reference to buffer for convenience
   */
  protected abstract R obtainRecord(int index, R buffer);

}
